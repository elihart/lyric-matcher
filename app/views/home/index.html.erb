<div id="song_input">
  <h2>Enter a Song</h2>

  <p id="error_message">Error finding song</p>

  <form action="" method="">
    <input type="text" id="title_box" placeholder="Song Title" autofocus/> </br>
    <input type="text" id="artist_box" placeholder="Artist"/> </br>
    <!-- Return false so request is not sent but the onclick function runs -->
    <input type="submit" onclick="loadSong(); return false;" value="Load"/>
  </form>
</div>

<div id="playerDiv">
  <table id="playerTable">
    <tr>
      <td>
        <div id="videoDiv">Loading...</div>
      </td>
      <td valign="top">
        <div id="lyricsDiv">

        </div>
      </td>
    </tr>
    <tr>
      <td>
        <div id="videoInfo">
          <p>Current Time: <span id="videoCurrentTime">--:--</span> | Duration: <span
          id="videoDuration">--:--</span></p>

          <p>Controls: <a href="javascript:void(0);" onclick="playVideo();">Play</a> | <a
          href="javascript:void(0);" onclick="pauseVideo();">Pause</a> | <a
          href="javascript:void(0);" onclick="showSongSelect();">New Song</a>
          </p>
        </div>
      </td>
    </tr>
  </table>

</div>


<script>
    // the youtube player flash object
    var ytPlayer;
    var lyricPlayer;

    $(function () {
        loadPlayer();
    });


    // Update a particular HTML element with a new value
    function updateHTML(elmId, value) {
        document.getElementById(elmId).innerHTML = value;
    }

    // This function is called when an error is thrown by the player
    function onPlayerError(errorCode) {
        alert("An error occured of type:" + errorCode);
    }

    // This function is called when the player changes state
    function onPlayerStateChange(newState) {

    }

    // Display information about the current state of the player
    function updatePlayerInfo() {
        // Also check that at least one function exists since when IE unloads the
        // page, it will destroy the SWF before clearing the interval.
        if (ytPlayer && ytPlayer.getDuration) {
            updateHTML("videoDuration", ytPlayer.getDuration());
            updateHTML("videoCurrentTime", ytPlayer.getCurrentTime());
        }
    }


    function playVideo() {
        if (ytPlayer) {
            ytPlayer.playVideo();
        }
    }

    function pauseVideo() {
        if (ytPlayer) {
            ytPlayer.pauseVideo();
        }
    }

    // hide the player and show the form to choose a song
    function showSongSelect() {
        lyricPlayer.stop();
        $('#playerDiv').invisible();
        $('#song_input').show();
        $('#title_box').focus();
    }

    // hide the song select form and show the player
    function showPlayer(data) {
        $('#song_input').hide();
        $('#playerDiv').visible();
        lyricPlayer.loadSong(data, recordSongResults);
    }

    // get the song title and artist from the song select form
    // and attempt to load the video and lyrics in the player
    function loadSong() {
        $('#error_message').hide();
        var title = $("#title_box").val();
        var artist = $("#artist_box").val();

        // search youtube for the song
        var mods = '-cover -parody';
        var q = 'intitle:"' + title + '" intitle:"' + artist + '"';
        var params = {
            "part": "id",
            "maxResults": 1,
            "order": "viewCount",
            "safeSearch": "none",
            "type": "video",
            "videoEmbeddable": true,
            "key": "AIzaSyALsmfpU8Pvnb84oAILcWTMFXtzdMwGZhk",
            "q": q
        };

        $.ajax({
            url: "https://www.googleapis.com/youtube/v3/search",
            data: params
        })
                .done(function (data) {
                    var videoId = data.items[0].id.videoId;
                    ytPlayer.loadVideoById(videoId);
                });


        // get lyrics
        $.ajax({
            url: "<%=request.base_url%>" + "/home/lyrics",
            data: {title: title, artist: artist}
        })
                .done(function (data) {
                    log(data);
                    if (!data) {
                        lyricsError();
                    } else {
                        showPlayer(data);
                    }
                });
    }

    function lyricsError() {
        $('#error_message').show();
        $('#title_box').focus();
    }

    function loadLyrics(lyrics) {
        var div = $('#lyrics_div');
        div.html('');

        $.each(lyrics, function (index, value) {
            div.append("<p>" + value + "</p>")
        });

    }


    // This function is automatically called by the player once it loads
    function onYouTubePlayerReady(playerId) {
        ytPlayer = document.getElementById("ytPlayer");
        // This causes the updatePlayerInfo function to be called every 250ms to
        // get fresh data from the player
        setInterval(updatePlayerInfo, 250);
        updatePlayerInfo();
        ytPlayer.addEventListener("onStateChange", "onPlayerStateChange");
        ytPlayer.addEventListener("onError", "onPlayerError");

        //ytPlayer.cueVideoById("ylLzyHk54Z0");
        lyricPlayer = new LyricPlayer(ytPlayer, 'lyricsDiv');

        // loading done, show song selector
        log("player loaded");

    }

    // The "main method" of this sample. Called when someone clicks "Run".
    function loadPlayer() {
        // Lets Flash from another domain call JavaScript
        var params = { allowScriptAccess: "always" };
        // The element id of the Flash embed
        var atts = { id: "ytPlayer" };
        // All of the magic handled by SWFObject (http://code.google.com/p/swfobject/)
        swfobject.embedSWF("http://www.youtube.com/apiplayer?" +
                "version=3&enablejsapi=1&playerapiid=player1",
                "videoDiv", "480", "295", "9", null, null, params, atts);
    }

    function recordSongResults(songData) {

    }


</script>
